// <auto-generated />
using System;
using LandingBack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LandingBack.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250916160906_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LandingBack.Data.Modelos.Agente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("BloqueoHasta")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IntentosFallidosLogin")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("UltimoLogin")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Agentes");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("AgenteId")
                        .HasColumnType("integer");

                    b.Property<string>("Entidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("EntidadId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ValorAnterior")
                        .HasColumnType("text");

                    b.Property<string>("ValorNuevo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgenteAsignadoId")
                        .HasColumnType("integer");

                    b.Property<string>("Canal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IpAddress")
                        .HasColumnType("text");

                    b.Property<string>("Mensaje")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NotasInternas")
                        .HasColumnType("text");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("integer");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.Property<string>("TipoConsulta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserAgent")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgenteAsignadoId");

                    b.HasIndex("PropiedadId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.Propiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AceptaCredito")
                        .HasColumnType("boolean");

                    b.Property<bool>("AceptaMascotas")
                        .HasColumnType("boolean");

                    b.Property<int?>("Ambientes")
                        .HasColumnType("integer");

                    b.Property<string>("AmenitiesJson")
                        .HasColumnType("text");

                    b.Property<int?>("Antiguedad")
                        .HasColumnType("integer");

                    b.Property<bool?>("AptoCredito")
                        .HasColumnType("boolean");

                    b.Property<int?>("Banos")
                        .HasColumnType("integer");

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool?>("Cochera")
                        .HasColumnType("boolean");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("text");

                    b.Property<string>("Comuna")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<bool>("Destacado")
                        .HasColumnType("boolean");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("DisponibilidadInmediata")
                        .HasColumnType("boolean");

                    b.Property<int?>("Dormitorios")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<decimal?>("Expensas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaPublicacionUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("GeoLatitud")
                        .HasColumnType("double precision");

                    b.Property<double?>("GeoLongitud")
                        .HasColumnType("double precision");

                    b.Property<double?>("Latitud")
                        .HasColumnType("double precision");

                    b.Property<string>("Localidad")
                        .HasColumnType("text");

                    b.Property<double?>("Longitud")
                        .HasColumnType("double precision");

                    b.Property<int?>("MetrosCubiertos")
                        .HasColumnType("integer");

                    b.Property<int?>("MetrosTotales")
                        .HasColumnType("integer");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Operacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Orientacion")
                        .HasColumnType("text");

                    b.Property<int?>("Piso")
                        .HasColumnType("integer");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Provincia")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Propiedades");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.PropiedadHistorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Campo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("FechaUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<string>("ValorAnterior")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ValorNuevo")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("PropiedadHistoriales");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.PropiedadMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("boolean");

                    b.Property<int>("Orden")
                        .HasColumnType("integer");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("integer");

                    b.Property<int?>("PropiedadId1")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoArchivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.HasIndex("PropiedadId1");

                    b.ToTable("PropiedadMedias");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.SavedSearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("NotificacionesActivas")
                        .HasColumnType("boolean");

                    b.Property<string>("ParametrosBusqueda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ResultadosUltimaEjecucion")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UltimaEjecucion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SavedSearches");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AgenteId")
                        .HasColumnType("integer");

                    b.Property<string>("ClienteEmail")
                        .HasColumnType("text");

                    b.Property<string>("ClienteNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClienteTelefono")
                        .HasColumnType("text");

                    b.Property<int?>("CreadoPorUsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LeadId")
                        .HasColumnType("integer");

                    b.Property<string>("NotasVisita")
                        .HasColumnType("text");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("LeadId");

                    b.HasIndex("PropiedadId");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.VisitaAuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<string>("UsuarioNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ValoresAnteriores")
                        .HasColumnType("text");

                    b.Property<string>("ValoresNuevos")
                        .HasColumnType("text");

                    b.Property<int>("VisitaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VisitaId");

                    b.ToTable("VisitaAuditLogs");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.AuditLog", b =>
                {
                    b.HasOne("LandingBack.Data.Modelos.Agente", "Agente")
                        .WithMany("AuditLogs")
                        .HasForeignKey("AgenteId");

                    b.Navigation("Agente");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.Lead", b =>
                {
                    b.HasOne("LandingBack.Data.Modelos.Agente", "AgenteAsignado")
                        .WithMany("Leads")
                        .HasForeignKey("AgenteAsignadoId");

                    b.HasOne("LandingBack.Data.Modelos.Propiedad", "Propiedad")
                        .WithMany()
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgenteAsignado");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.PropiedadHistorial", b =>
                {
                    b.HasOne("LandingBack.Data.Modelos.Propiedad", "Propiedad")
                        .WithMany("Historial")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.PropiedadMedia", b =>
                {
                    b.HasOne("LandingBack.Data.Modelos.Propiedad", "Propiedad")
                        .WithMany("Medias")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LandingBack.Data.Modelos.Propiedad", null)
                        .WithMany("PropiedadMedias")
                        .HasForeignKey("PropiedadId1");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.SavedSearch", b =>
                {
                    b.HasOne("LandingBack.Data.Modelos.Agente", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.Visita", b =>
                {
                    b.HasOne("LandingBack.Data.Modelos.Agente", "Agente")
                        .WithMany("Visitas")
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LandingBack.Data.Modelos.Lead", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId");

                    b.HasOne("LandingBack.Data.Modelos.Propiedad", "Propiedad")
                        .WithMany()
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agente");

                    b.Navigation("Lead");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.VisitaAuditLog", b =>
                {
                    b.HasOne("LandingBack.Data.Modelos.Visita", "Visita")
                        .WithMany()
                        .HasForeignKey("VisitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visita");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.Agente", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Leads");

                    b.Navigation("Visitas");
                });

            modelBuilder.Entity("LandingBack.Data.Modelos.Propiedad", b =>
                {
                    b.Navigation("Historial");

                    b.Navigation("Medias");

                    b.Navigation("PropiedadMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
