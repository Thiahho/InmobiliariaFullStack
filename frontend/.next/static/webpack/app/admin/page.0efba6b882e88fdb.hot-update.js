"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./src/store/visitasStore.js":
/*!***********************************!*\
  !*** ./src/store/visitasStore.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useVisitasStore: function() { return /* binding */ useVisitasStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/axiosClient */ \"(app-pages-browser)/./src/lib/axiosClient.js\");\n\n\nconst useVisitasStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        // Estado\n        visitas: [],\n        visitaActual: null,\n        agentes: [],\n        loading: false,\n        error: null,\n        filtros: {\n            agenteId: null,\n            estado: \"\",\n            fechaDesde: null,\n            fechaHasta: null,\n            page: 1,\n            pageSize: 20\n        },\n        totalCount: 0,\n        totalPages: 0,\n        // Acciones básicas\n        setLoading: (loading)=>set({\n                loading\n            }),\n        setError: (error)=>set({\n                error\n            }),\n        clearError: ()=>set({\n                error: null\n            }),\n        // Gestión de filtros\n        setFiltros: (filtros)=>set((state)=>({\n                    filtros: {\n                        ...state.filtros,\n                        ...filtros,\n                        page: 1\n                    }\n                })),\n        resetFiltros: ()=>set({\n                filtros: {\n                    agenteId: null,\n                    estado: \"\",\n                    fechaDesde: null,\n                    fechaHasta: null,\n                    page: 1,\n                    pageSize: 20\n                }\n            }),\n        // Cargar visitas\n        cargarVisitas: async ()=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const { filtros } = get();\n                const params = new URLSearchParams();\n                // Para cargar todas las visitas, usamos un rango de fechas amplio si no está especificado\n                if (!filtros.fechaDesde) {\n                    const haceUnMes = new Date();\n                    haceUnMes.setMonth(haceUnMes.getMonth() - 1);\n                    params.append(\"fechaDesde\", haceUnMes.toISOString());\n                }\n                if (!filtros.fechaHasta) {\n                    const enTresMeses = new Date();\n                    enTresMeses.setMonth(enTresMeses.getMonth() + 3);\n                    params.append(\"fechaHasta\", enTresMeses.toISOString());\n                }\n                Object.entries(filtros).forEach((param)=>{\n                    let [key, value] = param;\n                    if (value !== null && value !== \"\" && value !== undefined) {\n                        if (value instanceof Date) {\n                            params.append(key, value.toISOString());\n                        } else if (key === \"agenteId\" && value) {\n                            params.append(key, value.toString());\n                        }\n                    }\n                });\n                // Usar el endpoint de calendar que funciona\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.get(\"/visita/calendar?\".concat(params));\n                // Transformar datos del formato calendar al formato esperado por el componente\n                const visitasTransformadas = (response.data || []).map((visita)=>{\n                    var _visita_description, _visita_title;\n                    // Extraer información del description\n                    const lines = ((_visita_description = visita.description) === null || _visita_description === void 0 ? void 0 : _visita_description.split(\"\\n\")) || [];\n                    const clienteLine = lines.find((line)=>line.startsWith(\"Cliente:\"));\n                    const propiedadLine = lines.find((line)=>line.startsWith(\"Propiedad:\"));\n                    const agenteLine = lines.find((line)=>line.startsWith(\"Agente:\"));\n                    // Extraer código de propiedad del title\n                    const codigoMatch = (_visita_title = visita.title) === null || _visita_title === void 0 ? void 0 : _visita_title.match(/- (\\d+)$/);\n                    return {\n                        id: visita.id,\n                        propiedadCodigo: codigoMatch ? codigoMatch[1] : \"N/A\",\n                        propiedadDireccion: propiedadLine ? propiedadLine.replace(\"Propiedad: \", \"\") : \"N/A\",\n                        clienteNombre: clienteLine ? clienteLine.replace(\"Cliente: \", \"\") : \"N/A\",\n                        clienteTelefono: \"\",\n                        clienteEmail: \"\",\n                        agenteNombre: agenteLine ? agenteLine.replace(\"Agente: \", \"\") : \"N/A\",\n                        fechaHora: visita.start,\n                        duracionMinutos: visita.end && visita.start ? Math.round((new Date(visita.end) - new Date(visita.start)) / (1000 * 60)) : 60,\n                        estado: visita.estado || \"Pendiente\",\n                        observaciones: \"\",\n                        fechaCreacion: visita.start\n                    };\n                });\n                set({\n                    visitas: visitasTransformadas,\n                    totalCount: visitasTransformadas.length,\n                    totalPages: 1,\n                    loading: false\n                });\n            } catch (error) {\n                var _error_response_data, _error_response;\n                console.error(\"Error cargando visitas:\", error);\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al cargar visitas\",\n                    loading: false\n                });\n            }\n        },\n        // Cargar visitas para calendario\n        cargarVisitasCalendario: async function() {\n            let agenteId = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, fechaDesde = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, fechaHasta = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const params = new URLSearchParams();\n                if (agenteId) params.append(\"agenteId\", agenteId);\n                if (fechaDesde) params.append(\"fechaDesde\", fechaDesde.toISOString());\n                if (fechaHasta) params.append(\"fechaHasta\", fechaHasta.toISOString());\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.get(\"/visita/calendar?\".concat(params));\n                const raw = response.data || [];\n                // Normalizar claves (Start/End/Estado -> start/end/estado) y asegurar strings ISO\n                const normalized = raw.map((v)=>{\n                    const start = v.start || v.Start || v.fechaInicio || v.FechaInicio;\n                    const end = v.end || v.End || v.fechaFin || v.FechaFin;\n                    return {\n                        id: v.id || v.Id,\n                        title: v.title || v.Title || \"\",\n                        start: typeof start === \"string\" ? start : start instanceof Date ? start.toISOString() : \"\",\n                        end: typeof end === \"string\" ? end : end instanceof Date ? end.toISOString() : \"\",\n                        color: v.color || v.Color || \"#007bff\",\n                        estado: v.estado || v.Estado || \"Pendiente\",\n                        description: v.description || v.Description,\n                        propiedadCodigo: v.propiedadCodigo || v.PropiedadCodigo,\n                        clienteNombre: v.clienteNombre || v.ClienteNombre,\n                        agenteId: v.agenteId || v.AgenteId,\n                        agenteNombre: v.agenteNombre || v.AgenteNombre\n                    };\n                });\n                set({\n                    loading: false\n                });\n                return normalized;\n            } catch (error) {\n                var _error_response_data, _error_response;\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al cargar calendario\",\n                    loading: false\n                });\n                return [];\n            }\n        },\n        // Obtener visita por ID\n        obtenerVisita: async (id)=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.get(\"/visita/\".concat(id));\n                set({\n                    visitaActual: response.data,\n                    loading: false\n                });\n                return response.data;\n            } catch (error) {\n                var _error_response_data, _error_response;\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al obtener visita\",\n                    loading: false\n                });\n                throw error;\n            }\n        },\n        // Crear visita\n        crearVisita: async (visitaData)=>{\n            console.log(\"\\uD83D\\uDD27 Store: Iniciando crearVisita con datos:\", visitaData);\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                // Transformar datos a PascalCase para el backend\n                const dataForBackend = {\n                    PropiedadId: visitaData.propiedadId,\n                    AgenteId: visitaData.agenteId,\n                    ClienteNombre: visitaData.clienteNombre,\n                    ClienteTelefono: visitaData.clienteTelefono || null,\n                    ClienteEmail: visitaData.clienteEmail || null,\n                    FechaHora: visitaData.fechaHora instanceof Date ? visitaData.fechaHora.toISOString() : visitaData.fechaHora,\n                    DuracionMinutos: visitaData.duracionMinutos,\n                    Observaciones: visitaData.observaciones || null\n                };\n                console.log(\"\\uD83C\\uDF10 Store: Enviando datos al backend:\", dataForBackend);\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.post(\"/visita\", dataForBackend);\n                console.log(\"\\uD83D\\uDCE8 Store: Respuesta del backend:\", response.data);\n                // Actualizar lista local\n                set((state)=>({\n                        visitas: [\n                            response.data,\n                            ...state.visitas\n                        ],\n                        loading: false\n                    }));\n                console.log(\"✅ Store: Visita creada exitosamente\");\n                return response.data;\n            } catch (error) {\n                var _error_response, _error_response1, _error_response2, _error_response_data, _error_response3, _error_response_data1, _error_response4;\n                console.error(\"❌ Store: Error en crearVisita:\", error);\n                console.error(\"❌ Store: Error completo:\", {\n                    message: error === null || error === void 0 ? void 0 : error.message,\n                    response: error === null || error === void 0 ? void 0 : error.response,\n                    status: error === null || error === void 0 ? void 0 : (_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status,\n                    data: error === null || error === void 0 ? void 0 : (_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.data\n                });\n                // Log específico para errores de validación\n                if ((error === null || error === void 0 ? void 0 : (_error_response2 = error.response) === null || _error_response2 === void 0 ? void 0 : _error_response2.status) === 400 && (error === null || error === void 0 ? void 0 : (_error_response3 = error.response) === null || _error_response3 === void 0 ? void 0 : (_error_response_data = _error_response3.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.errors)) {\n                    console.error(\"❌ Errores de validaci\\xf3n espec\\xedficos:\", error.response.data.errors);\n                }\n                set({\n                    error: ((_error_response4 = error.response) === null || _error_response4 === void 0 ? void 0 : (_error_response_data1 = _error_response4.data) === null || _error_response_data1 === void 0 ? void 0 : _error_response_data1.message) || \"Error al crear visita\",\n                    loading: false\n                });\n                throw error;\n            }\n        },\n        // Actualizar visita\n        actualizarVisita: async (id, visitaData)=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                // Transformar datos a PascalCase para el backend\n                const dataForBackend = {\n                    Id: id,\n                    PropiedadId: visitaData.propiedadId,\n                    AgenteId: visitaData.agenteId,\n                    ClienteNombre: visitaData.clienteNombre,\n                    ClienteTelefono: visitaData.clienteTelefono,\n                    ClienteEmail: visitaData.clienteEmail,\n                    FechaHora: visitaData.fechaHora,\n                    DuracionMinutos: visitaData.duracionMinutos,\n                    Observaciones: visitaData.observaciones,\n                    Estado: visitaData.estado,\n                    NotasVisita: visitaData.notasVisita\n                };\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.put(\"/visita/\".concat(id), dataForBackend);\n                // Actualizar lista local\n                set((state)=>{\n                    var _state_visitaActual;\n                    return {\n                        visitas: state.visitas.map((v)=>v.id === id ? response.data : v),\n                        visitaActual: ((_state_visitaActual = state.visitaActual) === null || _state_visitaActual === void 0 ? void 0 : _state_visitaActual.id) === id ? response.data : state.visitaActual,\n                        loading: false\n                    };\n                });\n                return response.data;\n            } catch (error) {\n                var _error_response_data, _error_response;\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al actualizar visita\",\n                    loading: false\n                });\n                throw error;\n            }\n        },\n        // Eliminar visita\n        eliminarVisita: async (id)=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.delete(\"/visita/\".concat(id));\n                // Actualizar lista local\n                set((state)=>({\n                        visitas: state.visitas.filter((v)=>v.id !== id),\n                        loading: false\n                    }));\n            } catch (error) {\n                var _error_response_data, _error_response;\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al eliminar visita\",\n                    loading: false\n                });\n                throw error;\n            }\n        },\n        // Acciones de estado\n        confirmarVisita: async (id)=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.patch(\"/visita/\".concat(id, \"/confirmar\"));\n                // Actualizar lista local\n                set((state)=>({\n                        visitas: state.visitas.map((v)=>v.id === id ? response.data : v),\n                        loading: false\n                    }));\n                return response.data;\n            } catch (error) {\n                var _error_response_data, _error_response;\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al confirmar visita\",\n                    loading: false\n                });\n                throw error;\n            }\n        },\n        cancelarVisita: async (id, motivo)=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.patch(\"/visita/\".concat(id, \"/cancelar\"), motivo);\n                // Actualizar lista local\n                set((state)=>({\n                        visitas: state.visitas.map((v)=>v.id === id ? response.data : v),\n                        loading: false\n                    }));\n                return response.data;\n            } catch (error) {\n                var _error_response_data, _error_response;\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al cancelar visita\",\n                    loading: false\n                });\n                throw error;\n            }\n        },\n        reagendarVisita: async (id, nuevaFecha)=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.patch(\"/visita/\".concat(id, \"/reagendar\"), nuevaFecha instanceof Date ? nuevaFecha.toISOString() : nuevaFecha);\n                // Actualizar lista local\n                set((state)=>({\n                        visitas: state.visitas.map((v)=>v.id === id ? response.data : v),\n                        loading: false\n                    }));\n                return response.data;\n            } catch (error) {\n                var _error_response_data, _error_response;\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al reagendar visita\",\n                    loading: false\n                });\n                throw error;\n            }\n        },\n        marcarRealizada: async function(id) {\n            let notas = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\";\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.patch(\"/visita/\".concat(id, \"/realizada\"), notas);\n                // Actualizar lista local\n                set((state)=>({\n                        visitas: state.visitas.map((v)=>v.id === id ? response.data : v),\n                        loading: false\n                    }));\n                return response.data;\n            } catch (error) {\n                var _error_response_data, _error_response;\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al marcar como realizada\",\n                    loading: false\n                });\n                throw error;\n            }\n        },\n        // Acciones masivas\n        accionMasiva: async function(visitaIds, accion) {\n            let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const payload = {\n                    visitaIds,\n                    accion,\n                    ...options\n                };\n                await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.post(\"/visita/bulk-action\", payload);\n                // Recargar visitas\n                get().cargarVisitas();\n            } catch (error) {\n                var _error_response_data, _error_response;\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error en acci\\xf3n masiva\",\n                    loading: false\n                });\n                throw error;\n            }\n        },\n        // Validar conflictos\n        validarConflicto: async function(agenteId, fechaHora, duracionMinutos) {\n            let visitaIdExcluir = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.post(\"/visita/check-conflict\", {\n                    AgenteId: agenteId,\n                    FechaHora: fechaHora,\n                    DuracionMinutos: duracionMinutos,\n                    VisitaIdExcluir: visitaIdExcluir\n                });\n                return response.data.hasConflict;\n            } catch (error) {\n                console.error(\"Error validando conflicto:\", error);\n                return false;\n            }\n        },\n        // Obtener slots disponibles\n        obtenerSlotsDisponibles: async function(agenteId, fecha) {\n            let duracionMinutos = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 60;\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.get(\"/visita/available-slots\", {\n                    params: {\n                        agenteId,\n                        fecha: fecha.toISOString(),\n                        duracionMinutos\n                    }\n                });\n                return response.data;\n            } catch (error) {\n                console.error(\"Error obteniendo slots:\", error);\n                return [];\n            }\n        },\n        // Cargar agentes\n        cargarAgentes: async ()=>{\n            console.log(\"\\uD83D\\uDD04 Iniciando cargarAgentes...\");\n            try {\n                console.log(\"\\uD83D\\uDCE1 Haciendo llamada a /usuarios/agentes\");\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.get(\"/usuarios/agentes\");\n                console.log(\"✅ Respuesta recibida:\", response.data);\n                set({\n                    agentes: response.data\n                });\n                console.log(\"✅ Agentes guardados en estado\");\n            } catch (error) {\n                console.error(\"❌ Error cargando agentes:\", error);\n                set({\n                    agentes: []\n                });\n            }\n        },\n        // Descargar ICS\n        descargarICS: async (visitaId)=>{\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.get(\"/visita/\".concat(visitaId, \"/ics\"), {\n                    responseType: \"blob\"\n                });\n                const url = window.URL.createObjectURL(new Blob([\n                    response.data\n                ]));\n                const link = document.createElement(\"a\");\n                link.href = url;\n                link.setAttribute(\"download\", \"visita-\".concat(visitaId, \".ics\"));\n                document.body.appendChild(link);\n                link.click();\n                link.remove();\n                window.URL.revokeObjectURL(url);\n            } catch (error) {\n                set({\n                    error: \"Error al descargar archivo ICS\"\n                });\n            }\n        },\n        // Enviar notificación\n        enviarNotificacion: async function(visitaId) {\n            let tipo = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"Email\";\n            try {\n                await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.post(\"/visita/\".concat(visitaId, \"/notification\"), null, {\n                    params: {\n                        tipo\n                    }\n                });\n            } catch (error) {\n                set({\n                    error: \"Error al enviar notificaci\\xf3n\"\n                });\n                throw error;\n            }\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/visitasStore.js\n"));

/***/ })

});