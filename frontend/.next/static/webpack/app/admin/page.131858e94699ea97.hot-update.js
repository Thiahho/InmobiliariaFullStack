"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./src/store/propiedadesStore.js":
/*!***************************************!*\
  !*** ./src/store/propiedadesStore.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePropiedadesStore: function() { return /* binding */ usePropiedadesStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/axiosClient */ \"(app-pages-browser)/./src/lib/axiosClient.js\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n\n\n\nconst usePropiedadesStore = (0,zustand__WEBPACK_IMPORTED_MODULE_2__.create)((set, get)=>({\n        // Estado\n        propiedades: [],\n        propiedadActual: null,\n        mediasPropiedad: [],\n        filtros: {\n            operacion: \"\",\n            tipo: \"\",\n            barrio: \"\",\n            comuna: \"\",\n            precioMin: \"\",\n            precioMax: \"\",\n            ambientes: \"\",\n            dormitorios: \"\",\n            cochera: null,\n            estado: \"Activo\",\n            destacado: null,\n            page: 1,\n            pageSize: 20,\n            orderBy: \"FechaPublicacionUtc\",\n            orderDesc: true\n        },\n        paginacion: {\n            totalCount: 0,\n            totalPages: 0,\n            currentPage: 1,\n            pageSize: 20\n        },\n        loading: false,\n        error: null,\n        // Acciones para propiedades\n        fetchPropiedades: async function() {\n            let filtrosCustom = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const filtrosFinales = filtrosCustom || get().filtros;\n                // Verificar si hay filtros activos (incluyendo searchTerm)\n                const hasFilters = Object.entries(filtrosFinales).some((param)=>{\n                    let [key, value] = param;\n                    if (key === \"page\" || key === \"pageSize\" || key === \"orderBy\" || key === \"orderDesc\") {\n                        return false; // Ignorar campos de paginación y ordenamiento\n                    }\n                    return value !== \"\" && value !== null && value !== undefined;\n                });\n                let response;\n                if (hasFilters) {\n                    // Usar búsqueda avanzada si hay filtros\n                    const searchData = {\n                        page: filtrosFinales.page || 1,\n                        pageSize: filtrosFinales.pageSize || 20,\n                        operacion: filtrosFinales.operacion || null,\n                        tipo: filtrosFinales.tipo || null,\n                        barrio: filtrosFinales.barrio || null,\n                        comuna: filtrosFinales.comuna || null,\n                        precioMin: filtrosFinales.precioMin ? parseFloat(filtrosFinales.precioMin) : null,\n                        precioMax: filtrosFinales.precioMax ? parseFloat(filtrosFinales.precioMax) : null,\n                        ambientes: filtrosFinales.ambientes ? parseInt(filtrosFinales.ambientes) : null,\n                        dormitorios: filtrosFinales.dormitorios ? parseInt(filtrosFinales.dormitorios) : null,\n                        cochera: filtrosFinales.cochera,\n                        estado: filtrosFinales.estado || null,\n                        destacado: filtrosFinales.destacado,\n                        searchTerm: filtrosFinales.searchTerm || null // Agregar searchTerm como campo separado\n                    };\n                    response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.post(\"/propiedades/buscar-avanzada\", searchData);\n                    const { Data, TotalCount, Pagina, TamanoPagina, TotalPaginas } = response.data;\n                    set({\n                        propiedades: Data || [],\n                        paginacion: {\n                            totalCount: TotalCount || 0,\n                            totalPages: TotalPaginas || 0,\n                            currentPage: Pagina || 1,\n                            pageSize: TamanoPagina || 20\n                        },\n                        loading: false\n                    });\n                    return Data;\n                } else {\n                    // Usar endpoint simple de paginación si no hay filtros\n                    const params = new URLSearchParams();\n                    params.append(\"pagina\", filtrosFinales.page || 1);\n                    params.append(\"tamanoPagina\", filtrosFinales.pageSize || 20);\n                    response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.get(\"/propiedades/paginadas?\".concat(params));\n                    const { data, totalCount, totalPaginas, pagina, tamanoPagina } = response.data;\n                    set({\n                        propiedades: data || [],\n                        paginacion: {\n                            totalCount: totalCount || 0,\n                            totalPages: totalPaginas || 0,\n                            currentPage: pagina || 1,\n                            pageSize: tamanoPagina || 20\n                        },\n                        loading: false\n                    });\n                    return data;\n                }\n            } catch (error) {\n                var _error_response_data, _error_response;\n                console.error(\"Error al obtener propiedades:\", error);\n                set({\n                    propiedades: [],\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al cargar propiedades\",\n                    loading: false\n                });\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error al cargar propiedades\");\n                throw error;\n            }\n        },\n        fetchPropiedadById: async (id)=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.get(\"/propiedades/\".concat(id));\n                set({\n                    propiedadActual: response.data,\n                    loading: false\n                });\n                return response.data;\n            } catch (error) {\n                var _error_response_data, _error_response;\n                console.error(\"Error al obtener propiedad:\", error);\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al cargar propiedad\",\n                    loading: false\n                });\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error al cargar propiedad\");\n                throw error;\n            }\n        },\n        createPropiedad: async (propiedadData)=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.post(\"/propiedades\", propiedadData);\n                // Actualizar lista local\n                const nuevaPropiedad = response.data;\n                set((state)=>({\n                        propiedades: [\n                            nuevaPropiedad,\n                            ...state.propiedades || []\n                        ],\n                        propiedadActual: nuevaPropiedad,\n                        loading: false\n                    }));\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"Propiedad creada exitosamente\");\n                return nuevaPropiedad;\n            } catch (error) {\n                var _error_response_data, _error_response;\n                console.error(\"Error al crear propiedad:\", error);\n                const message = ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al crear propiedad\";\n                set({\n                    error: message,\n                    loading: false\n                });\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(message);\n                throw error;\n            }\n        },\n        updatePropiedad: async (id, propiedadData)=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                var _get_propiedadActual;\n                await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.put(\"/propiedades/\".concat(id), {\n                    ...propiedadData,\n                    id\n                });\n                // Actualizar lista local\n                set((state)=>({\n                        propiedades: (state.propiedades || []).map((p)=>p.id === id ? {\n                                ...p,\n                                ...propiedadData\n                            } : p),\n                        loading: false\n                    }));\n                // Si es la propiedad actual, actualizarla también\n                if (((_get_propiedadActual = get().propiedadActual) === null || _get_propiedadActual === void 0 ? void 0 : _get_propiedadActual.id) === id) {\n                    set((state)=>({\n                            propiedadActual: {\n                                ...state.propiedadActual,\n                                ...propiedadData\n                            }\n                        }));\n                }\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"Propiedad actualizada exitosamente\");\n            } catch (error) {\n                var _error_response_data, _error_response;\n                console.error(\"Error al actualizar propiedad:\", error);\n                const message = ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al actualizar propiedad\";\n                set({\n                    error: message,\n                    loading: false\n                });\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(message);\n                throw error;\n            }\n        },\n        deletePropiedad: async (id)=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.delete(\"/propiedades/\".concat(id));\n                // Remover de lista local\n                set((state)=>{\n                    var _state_propiedadActual;\n                    return {\n                        propiedades: state.propiedades.filter((p)=>p.id !== id),\n                        propiedadActual: ((_state_propiedadActual = state.propiedadActual) === null || _state_propiedadActual === void 0 ? void 0 : _state_propiedadActual.id) === id ? null : state.propiedadActual,\n                        loading: false\n                    };\n                });\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"Propiedad eliminada exitosamente\");\n            } catch (error) {\n                var _error_response_data, _error_response;\n                console.error(\"Error al eliminar propiedad:\", error);\n                const message = ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error al eliminar propiedad\";\n                set({\n                    error: message,\n                    loading: false\n                });\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(message);\n                throw error;\n            }\n        },\n        // Acciones para filtros\n        setFiltros: (nuevosFiltros)=>{\n            set((state)=>({\n                    filtros: {\n                        ...state.filtros,\n                        ...nuevosFiltros\n                    }\n                }));\n        },\n        resetFiltros: ()=>{\n            set({\n                filtros: {\n                    operacion: \"\",\n                    tipo: \"\",\n                    barrio: \"\",\n                    comuna: \"\",\n                    precioMin: \"\",\n                    precioMax: \"\",\n                    ambientes: \"\",\n                    dormitorios: \"\",\n                    cochera: null,\n                    estado: \"Activo\",\n                    destacado: null,\n                    page: 1,\n                    pageSize: 20,\n                    orderBy: \"FechaPublicacionUtc\",\n                    orderDesc: true\n                }\n            });\n        },\n        // Acciones para media\n        fetchMediasByPropiedad: async (propiedadId)=>{\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.get(\"/media/propiedad/\".concat(propiedadId));\n                set({\n                    mediasPropiedad: response.data\n                });\n                return response.data;\n            } catch (error) {\n                console.error(\"Error al obtener medias:\", error);\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error al cargar im\\xe1genes\");\n                throw error;\n            }\n        },\n        uploadMedia: async function(propiedadId, file) {\n            let titulo = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n            try {\n                const formData = new FormData();\n                formData.append(\"file\", file);\n                if (titulo) formData.append(\"titulo\", titulo);\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.post(\"/media/upload/\".concat(propiedadId), formData, {\n                    headers: {\n                        \"Content-Type\": \"multipart/form-data\"\n                    }\n                });\n                // Actualizar medias locales\n                set((state)=>({\n                        mediasPropiedad: [\n                            ...state.mediasPropiedad || [],\n                            response.data\n                        ]\n                    }));\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"Imagen subida exitosamente\");\n                return response.data;\n            } catch (error) {\n                console.error(\"Error al subir media:\", error);\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error al subir imagen\");\n                throw error;\n            }\n        },\n        bulkUploadMedia: async function(propiedadId, files) {\n            let tituloBase = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n            try {\n                const formData = new FormData();\n                files.forEach((file)=>formData.append(\"files\", file));\n                if (tituloBase) formData.append(\"tituloBase\", tituloBase);\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.post(\"/media/bulk-upload/\".concat(propiedadId), formData, {\n                    headers: {\n                        \"Content-Type\": \"multipart/form-data\"\n                    }\n                });\n                // Actualizar medias locales\n                set((state)=>({\n                        mediasPropiedad: [\n                            ...state.mediasPropiedad || [],\n                            ...response.data || []\n                        ]\n                    }));\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"\".concat(response.data.length, \" im\\xe1genes subidas exitosamente\"));\n                return response.data;\n            } catch (error) {\n                console.error(\"Error al subir medias:\", error);\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error al subir im\\xe1genes\");\n                throw error;\n            }\n        },\n        addExternalUrl: async (propiedadId, urlData)=>{\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.post(\"/media/url/\".concat(propiedadId), urlData);\n                // Actualizar medias locales\n                set((state)=>({\n                        mediasPropiedad: [\n                            ...state.mediasPropiedad || [],\n                            response.data\n                        ]\n                    }));\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"URL externa agregada exitosamente\");\n                return response.data;\n            } catch (error) {\n                console.error(\"Error al agregar URL externa:\", error);\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error al agregar URL externa\");\n                throw error;\n            }\n        },\n        updateMedia: async (mediaId, updateData)=>{\n            try {\n                await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.put(\"/media/\".concat(mediaId), updateData);\n                // Actualizar medias locales\n                set((state)=>({\n                        mediasPropiedad: (state.mediasPropiedad || []).map((m)=>m.id === mediaId ? {\n                                ...m,\n                                ...updateData\n                            } : m)\n                    }));\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"Media actualizada exitosamente\");\n            } catch (error) {\n                console.error(\"Error al actualizar media:\", error);\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error al actualizar media\");\n                throw error;\n            }\n        },\n        deleteMedia: async (mediaId)=>{\n            try {\n                await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.delete(\"/media/\".concat(mediaId));\n                // Remover de medias locales\n                set((state)=>({\n                        mediasPropiedad: state.mediasPropiedad.filter((m)=>m.id !== mediaId)\n                    }));\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"Media eliminada exitosamente\");\n            } catch (error) {\n                console.error(\"Error al eliminar media:\", error);\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error al eliminar media\");\n                throw error;\n            }\n        },\n        reorderMedia: async (propiedadId, ordenItems)=>{\n            try {\n                await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.put(\"/media/reorder/\".concat(propiedadId), {\n                    items: ordenItems\n                });\n                // Actualizar orden local\n                set((state)=>{\n                    const mediasActualizadas = [\n                        ...state.mediasPropiedad || []\n                    ];\n                    ordenItems.forEach((item)=>{\n                        const mediaIndex = mediasActualizadas.findIndex((m)=>m.id === item.id);\n                        if (mediaIndex !== -1) {\n                            mediasActualizadas[mediaIndex].orden = item.orden;\n                        }\n                    });\n                    // Reordenar array\n                    mediasActualizadas.sort((a, b)=>a.orden - b.orden);\n                    return {\n                        mediasPropiedad: mediasActualizadas\n                    };\n                });\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].success(\"Orden actualizado exitosamente\");\n            } catch (error) {\n                console.error(\"Error al reordenar medias:\", error);\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error al reordenar medias\");\n                throw error;\n            }\n        },\n        validateUrl: async (url)=>{\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.get(\"/media/validate-url?url=\".concat(encodeURIComponent(url)));\n                return response.data;\n            } catch (error) {\n                console.error(\"Error al validar URL:\", error);\n                return {\n                    valid: false,\n                    message: \"Error al validar URL\"\n                };\n            }\n        },\n        // Búsqueda avanzada\n        searchPropiedades: async (searchParams)=>{\n            set({\n                loading: true,\n                error: null\n            });\n            try {\n                const response = await _lib_axiosClient__WEBPACK_IMPORTED_MODULE_0__.axiosClient.post(\"/propiedades/buscar-avanzada\", searchParams);\n                const { Data, TotalCount, TotalPaginas, Pagina, TamanoPagina } = response.data;\n                set({\n                    propiedades: Data,\n                    paginacion: {\n                        totalCount: TotalCount,\n                        totalPages: TotalPaginas,\n                        currentPage: Pagina,\n                        pageSize: TamanoPagina\n                    },\n                    loading: false\n                });\n                return response.data;\n            } catch (error) {\n                var _error_response_data, _error_response;\n                console.error(\"Error en b\\xfasqueda avanzada:\", error);\n                set({\n                    error: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"Error en b\\xfasqueda\",\n                    loading: false\n                });\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Error en la b\\xfasqueda\");\n                throw error;\n            }\n        },\n        // Limpiar estado\n        clearError: ()=>set({\n                error: null\n            }),\n        clearPropiedadActual: ()=>set({\n                propiedadActual: null\n            }),\n        clearMediasPropiedad: ()=>set({\n                mediasPropiedad: []\n            })\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/store/propiedadesStore.js\n"));

/***/ })

});